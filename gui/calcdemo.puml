@startuml

title Calculate() operation - Calculator Class 


start

:get Input; 
note right: calculate(input)//parameter

:object data members: val:String,reg:String,tmpReg:boolean, reg:String; 
note left: declared at class level
:val= " ", reg= " ", op="", tmpReg=false;
note right: initialised at class level

if (input is 0 to 9 && !tmpReg ) then (yes)
  :val+=input;
  note right: concatenate value
  :return val;
else if(input is 0 to 9 && tmpReg) then (yes)
  :reg+=input;
  note right: concatenate tmpReg
  :return reg;
else if(input is "." && !tmpReg && !val.contains(".")) then (yes)
  :val+=input;
  :return val;
else if(input is "." && tmpReg &&!val.contains(".")) then (yes)
  :reg+=input;
  :return reg;
else if(input is op && !tmpReg ) then (yes)
  :op=input;
  :tmpReg=true;
  :reg="";
  :return val;
else if(input is op && tmpReg) then (yes)
  :perform operation;
  :op=input;
  :reg="";
  :return val;
else if(input is "=" && !tmpReg ) then (yes)
  :return val;
else if(input is "=" && tmpReg) then (yes)
  :perform operation;
  :reg="";
  :return val;
else if(input is "C" && !tmpReg ) then (yes)
  :val="";
  :return "0";
else if(input is "C" && tmpReg) then (yes)
  :reg="";
  :return "0";
else if(input is "AC") then (yes)
  :val="";
  :reg="";
  :tmpReg=false;
  :return "0";
else (no)
  if(tmpReg && reg.length()>0)then (yes)
    :return reg;
  else if(val.length()>0)then (yes)
    :return val;
  else
    :return "0";
  endif
endif

stop

@enduml